{
  "uid" : "49d11b2e915638de",
  "name" : "test_1060_pag",
  "fullName" : "vizsgaremek_tests.test_1060_pag#test_1060_pag",
  "historyId" : "598d743a1f35360e8dee6a13717baa89",
  "time" : {
    "start" : 1631002037528,
    "stop" : 1631002052938,
    "duration" : 15410
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert not True\n +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7f5067723190>)",
  "statusTrace" : "def test_1060_pag():\n        options = Options()\n        options.headless = True\n    \n        # driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)  # headless mode\n    \n        # options.add_argument('--headless')\n        # options.add_argument('--disable-gpu')\n    \n        URL = \"http://localhost:1667\"\n        driver.get(URL)\n    \n        # cookie handling\n        cookie_accept_button = driver.find_element_by_xpath(\"//div[@class='cookie__bar__buttons']/button[2]\")\n        cookie_accept_button.click()\n    \n        # login to app\n    \n        def login():\n            driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\").click()\n            driver.find_element_by_xpath(\"//form/fieldset[1]/input\").send_keys(\"testella@gmail.com\")\n            driver.find_element_by_xpath(\"//form/fieldset[2]/input\").send_keys(\"Teszt123\")\n            driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n            time.sleep(5)\n    \n        login()\n    \n        assert driver.current_url == \"http://localhost:1667/#/\"\n    \n        assert driver.find_element_by_class_name(\"pagination\").is_displayed()\n        pages = driver.find_elements_by_class_name(\"page-link\")\n    \n        # pagination:\n    \n        article_title_list = []\n        for page in pages:\n            time.sleep(2)\n            page.click()\n            time.sleep(2)\n            article_titles = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]//h1')\n            for article in article_titles:\n                article_title_list.append(article.text)\n    \n        print(\"Number of articles in Global feed: \", len(article_title_list))\n        print(\"Global feed's article list: \\n\", \"\\n\".join(article_title_list))\n    \n        assert len(article_title_list) == 22\n    \n        # checking if pagination works in terms of no duplicate articles on different pages of the feed\n        # fails\n    \n        page2_article_titles = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]//h1')\n        page2_article_title_list = []\n        for article in page2_article_titles:\n            page2_article_title_list.append(article.text)\n        print(page2_article_title_list)\n>       assert not any(item in article_title_list for item in page2_article_title_list)\nE       assert not True\nE        +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7f5067723190>)\n\nvizsgaremek_tests/test_1060_pag.py:68: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert not True\n +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7f5067723190>)",
    "statusTrace" : "def test_1060_pag():\n        options = Options()\n        options.headless = True\n    \n        # driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)  # headless mode\n    \n        # options.add_argument('--headless')\n        # options.add_argument('--disable-gpu')\n    \n        URL = \"http://localhost:1667\"\n        driver.get(URL)\n    \n        # cookie handling\n        cookie_accept_button = driver.find_element_by_xpath(\"//div[@class='cookie__bar__buttons']/button[2]\")\n        cookie_accept_button.click()\n    \n        # login to app\n    \n        def login():\n            driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\").click()\n            driver.find_element_by_xpath(\"//form/fieldset[1]/input\").send_keys(\"testella@gmail.com\")\n            driver.find_element_by_xpath(\"//form/fieldset[2]/input\").send_keys(\"Teszt123\")\n            driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n            time.sleep(5)\n    \n        login()\n    \n        assert driver.current_url == \"http://localhost:1667/#/\"\n    \n        assert driver.find_element_by_class_name(\"pagination\").is_displayed()\n        pages = driver.find_elements_by_class_name(\"page-link\")\n    \n        # pagination:\n    \n        article_title_list = []\n        for page in pages:\n            time.sleep(2)\n            page.click()\n            time.sleep(2)\n            article_titles = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]//h1')\n            for article in article_titles:\n                article_title_list.append(article.text)\n    \n        print(\"Number of articles in Global feed: \", len(article_title_list))\n        print(\"Global feed's article list: \\n\", \"\\n\".join(article_title_list))\n    \n        assert len(article_title_list) == 22\n    \n        # checking if pagination works in terms of no duplicate articles on different pages of the feed\n        # fails\n    \n        page2_article_titles = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]//h1')\n        page2_article_title_list = []\n        for article in page2_article_titles:\n            page2_article_title_list.append(article.text)\n        print(page2_article_title_list)\n>       assert not any(item in article_title_list for item in page2_article_title_list)\nE       assert not True\nE        +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7f5067723190>)\n\nvizsgaremek_tests/test_1060_pag.py:68: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a95eb98dd0419207",
      "name" : "log",
      "source" : "a95eb98dd0419207.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "1069aafbbdd8712f",
      "name" : "stdout",
      "source" : "1069aafbbdd8712f.txt",
      "type" : "text/plain",
      "size" : 555
    }, {
      "uid" : "6cae3006344c3f68",
      "name" : "stderr",
      "source" : "6cae3006344c3f68.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "vizsgaremek_tests"
  }, {
    "name" : "suite",
    "value" : "test_1060_pag"
  }, {
    "name" : "host",
    "value" : "fv-az33-550"
  }, {
    "name" : "thread",
    "value" : "3624-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "vizsgaremek_tests.test_1060_pag"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "f4e390c8e032434a",
        "reportUrl" : "https://zibinova.github.io/conduit/16//#testresult/f4e390c8e032434a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert not True\n +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7fcfccd0e190>)",
        "time" : {
          "start" : 1630833667605,
          "stop" : 1630833683139,
          "duration" : 15534
        }
      }, {
        "uid" : "98f02aa67a37571c",
        "reportUrl" : "https://zibinova.github.io/conduit/87//#testresult/98f02aa67a37571c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert not True\n +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7fa07b67e580>)",
        "time" : {
          "start" : 1630833640912,
          "stop" : 1630833656488,
          "duration" : 15576
        }
      }, {
        "uid" : "32c4933629815ad6",
        "reportUrl" : "https://zibinova.github.io/conduit/15//#testresult/32c4933629815ad6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert not True\n +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7fa4d4b425f0>)",
        "time" : {
          "start" : 1629290622288,
          "stop" : 1629290637658,
          "duration" : 15370
        }
      }, {
        "uid" : "eda9a6dbc70f1871",
        "reportUrl" : "https://zibinova.github.io/conduit/14//#testresult/eda9a6dbc70f1871",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert not True\n +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7f44312d2f90>)",
        "time" : {
          "start" : 1629008205576,
          "stop" : 1629008221008,
          "duration" : 15432
        }
      }, {
        "uid" : "87e70af5873abc29",
        "reportUrl" : "https://zibinova.github.io/conduit/85//#testresult/87e70af5873abc29",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert not True\n +  where True = any(<generator object test_1060_pag.<locals>.<genexpr> at 0x7f937293ff90>)",
        "time" : {
          "start" : 1629008182368,
          "stop" : 1629008197937,
          "duration" : 15569
        }
      }, {
        "uid" : "d7052599283669fd",
        "reportUrl" : "https://zibinova.github.io/conduit/13//#testresult/d7052599283669fd",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 22 == 26\n +  where 22 = len(['Lorem ipsum dolor sit amet', 'In nisl nisi scelerisque eu', 'Urna nunc id cursus metus.', 'Egestas egestas', 'Laoreet suspendisse interdum', 'Nibh praesent tristique magna', ...])",
        "time" : {
          "start" : 1628971440324,
          "stop" : 1628971455604,
          "duration" : 15280
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "49d11b2e915638de.json",
  "parameterValues" : [ ]
}