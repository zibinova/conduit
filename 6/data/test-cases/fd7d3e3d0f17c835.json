{
  "uid" : "fd7d3e3d0f17c835",
  "name" : "test_1045_upload",
  "fullName" : "vizsgaremek_tests.test_1041_upload#test_1045_upload",
  "historyId" : "bdfc9074005d8b7f0e9008e859bdc11d",
  "time" : {
    "start" : 1628696770141,
    "stop" : 1628696792537,
    "duration" : 22396
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert (11 + 5) == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"0071eecd-20aa-...belement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"2389e1fc-256f-40e9-bf49-8318ae1b702e\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"9fe882d8-cfe7-...te.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"54531870-840c-4075-b5d6-34ce5e2880ad\")>])",
  "statusTrace" : "def test_1045_upload():\n    \n        from selenium import webdriver\n        from webdriver_manager.chrome import ChromeDriverManager\n        from selenium.webdriver.chrome.options import Options\n        import csv\n        import time\n        from datetime import date\n        from datetime import datetime\n    \n        options = Options()\n        options.headless = True\n        # In order for ChromeDriverManager to work you must pip install it in your own environment.\n    \n        # driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)  # headless mode\n    \n        # options.add_argument('--headless')\n        # options.add_argument('--disable-gpu')\n    \n        URL = \"http://localhost:1667\"\n        driver.get(URL)\n    \n        # cookie handling\n        cookie_accept_button = driver.find_element_by_xpath(\"//div[@class='cookie__bar__buttons']/button[2]\")\n        cookie_accept_button.click()\n    \n        # login to app\n        driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\").click()\n        driver.find_element_by_xpath(\"//form/fieldset[1]/input\").send_keys(\"testella@gmail.com\")\n        driver.find_element_by_xpath(\"//form/fieldset[2]/input\").send_keys(\"Teszt123\")\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n        time.sleep(2)\n    \n        # check current number of \"My articles\"\n    \n        user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n        user.click()\n        article_list = driver.find_elements_by_class_name(\"article-preview\")\n        print(len(article_list))\n    \n        def generate_article():\n            new_article_link = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\")\n            new_article_link.click()\n            time.sleep(1)\n            article_title = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[1]/input\")\n            article_about = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[2]/input\")\n            article_text = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[3]/textarea\")\n            article_tag = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[4]//input\")\n            publish_button = driver.find_element_by_xpath(\"//*[@id='app']//form/button\")\n    \n            article_title.send_keys(row[0])\n            article_about.send_keys(row[1])\n            article_text.send_keys(row[2])\n            article_tag.send_keys(row[3])\n            time.sleep(1)\n            publish_button.click()\n            time.sleep(1)\n    \n        with open(\"new_article.csv\", encoding='utf-8') as csv_file:\n            reader = csv.reader(csv_file, delimiter=',')\n            next(reader)\n            for row in reader:\n    \n                generate_article()\n    \n                title = driver.find_element_by_tag_name(\"h1\").text\n                user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n                author = driver.find_element_by_class_name(\"author\")\n                edit_article_btn = driver.find_element_by_xpath(\"//span/a\")\n                del_article_btn = driver.find_element_by_xpath(\"//span/button\")\n                text = driver.find_element_by_xpath(\"//p\").text\n                tag = driver.find_element_by_xpath(\"//div[@class='tag-list']/a\").text\n    \n                assert title == row[0]\n                assert driver.current_url == \"http://localhost:1667/#/articles/\" + title.lower()\n                assert author.is_displayed()\n                assert author.text == user.text\n                assert edit_article_btn.is_displayed() and edit_article_btn.is_enabled()\n                assert del_article_btn.is_displayed() and del_article_btn.is_enabled()\n                assert text == row[2]\n                assert tag == row[3]\n    \n                # date of creation validity\n    \n                today = date.today()\n                article_date = driver.find_element_by_xpath(\"//span[@class='date']\").text\n                article_date_converted = datetime.strptime(article_date, \"%B %d, %Y\")\n                date_to_set = datetime.date(article_date_converted)\n    \n                assert date_to_set == today\n    \n        # check if newly created blogs have been added to \"My articles\"\n        # considering that pagination is not working correctly, all articles would appear on page 1\n    \n        user.click()\n        time.sleep(1)\n        assert driver.current_url == \"http://localhost:1667/#/@\" + user.text + \"/\"\n    \n        # determine number of rows in csv\n    \n        file = open(\"new_article.csv\")\n        reader = csv.reader(file)\n        next(reader)\n        rows = len(list(reader))\n    \n        # check the current article numbers:\n        new_article_list = driver.find_elements_by_class_name(\"article-preview\")\n>       assert len(article_list) + rows == len(new_article_list)\nE       assert (11 + 5) == 5\nE        +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"0071eecd-20aa-...belement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"2389e1fc-256f-40e9-bf49-8318ae1b702e\")>, ...])\nE        +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"9fe882d8-cfe7-...te.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"54531870-840c-4075-b5d6-34ce5e2880ad\")>])\n\nvizsgaremek_tests/test_1041_upload.py:111: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert (11 + 5) == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"0071eecd-20aa-...belement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"2389e1fc-256f-40e9-bf49-8318ae1b702e\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"9fe882d8-cfe7-...te.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"54531870-840c-4075-b5d6-34ce5e2880ad\")>])",
    "statusTrace" : "def test_1045_upload():\n    \n        from selenium import webdriver\n        from webdriver_manager.chrome import ChromeDriverManager\n        from selenium.webdriver.chrome.options import Options\n        import csv\n        import time\n        from datetime import date\n        from datetime import datetime\n    \n        options = Options()\n        options.headless = True\n        # In order for ChromeDriverManager to work you must pip install it in your own environment.\n    \n        # driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)  # headless mode\n    \n        # options.add_argument('--headless')\n        # options.add_argument('--disable-gpu')\n    \n        URL = \"http://localhost:1667\"\n        driver.get(URL)\n    \n        # cookie handling\n        cookie_accept_button = driver.find_element_by_xpath(\"//div[@class='cookie__bar__buttons']/button[2]\")\n        cookie_accept_button.click()\n    \n        # login to app\n        driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\").click()\n        driver.find_element_by_xpath(\"//form/fieldset[1]/input\").send_keys(\"testella@gmail.com\")\n        driver.find_element_by_xpath(\"//form/fieldset[2]/input\").send_keys(\"Teszt123\")\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n        time.sleep(2)\n    \n        # check current number of \"My articles\"\n    \n        user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n        user.click()\n        article_list = driver.find_elements_by_class_name(\"article-preview\")\n        print(len(article_list))\n    \n        def generate_article():\n            new_article_link = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\")\n            new_article_link.click()\n            time.sleep(1)\n            article_title = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[1]/input\")\n            article_about = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[2]/input\")\n            article_text = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[3]/textarea\")\n            article_tag = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[4]//input\")\n            publish_button = driver.find_element_by_xpath(\"//*[@id='app']//form/button\")\n    \n            article_title.send_keys(row[0])\n            article_about.send_keys(row[1])\n            article_text.send_keys(row[2])\n            article_tag.send_keys(row[3])\n            time.sleep(1)\n            publish_button.click()\n            time.sleep(1)\n    \n        with open(\"new_article.csv\", encoding='utf-8') as csv_file:\n            reader = csv.reader(csv_file, delimiter=',')\n            next(reader)\n            for row in reader:\n    \n                generate_article()\n    \n                title = driver.find_element_by_tag_name(\"h1\").text\n                user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n                author = driver.find_element_by_class_name(\"author\")\n                edit_article_btn = driver.find_element_by_xpath(\"//span/a\")\n                del_article_btn = driver.find_element_by_xpath(\"//span/button\")\n                text = driver.find_element_by_xpath(\"//p\").text\n                tag = driver.find_element_by_xpath(\"//div[@class='tag-list']/a\").text\n    \n                assert title == row[0]\n                assert driver.current_url == \"http://localhost:1667/#/articles/\" + title.lower()\n                assert author.is_displayed()\n                assert author.text == user.text\n                assert edit_article_btn.is_displayed() and edit_article_btn.is_enabled()\n                assert del_article_btn.is_displayed() and del_article_btn.is_enabled()\n                assert text == row[2]\n                assert tag == row[3]\n    \n                # date of creation validity\n    \n                today = date.today()\n                article_date = driver.find_element_by_xpath(\"//span[@class='date']\").text\n                article_date_converted = datetime.strptime(article_date, \"%B %d, %Y\")\n                date_to_set = datetime.date(article_date_converted)\n    \n                assert date_to_set == today\n    \n        # check if newly created blogs have been added to \"My articles\"\n        # considering that pagination is not working correctly, all articles would appear on page 1\n    \n        user.click()\n        time.sleep(1)\n        assert driver.current_url == \"http://localhost:1667/#/@\" + user.text + \"/\"\n    \n        # determine number of rows in csv\n    \n        file = open(\"new_article.csv\")\n        reader = csv.reader(file)\n        next(reader)\n        rows = len(list(reader))\n    \n        # check the current article numbers:\n        new_article_list = driver.find_elements_by_class_name(\"article-preview\")\n>       assert len(article_list) + rows == len(new_article_list)\nE       assert (11 + 5) == 5\nE        +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"0071eecd-20aa-...belement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"2389e1fc-256f-40e9-bf49-8318ae1b702e\")>, ...])\nE        +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"9fe882d8-cfe7-...te.webelement.WebElement (session=\"17aab078d06433bcef6af02194257d81\", element=\"54531870-840c-4075-b5d6-34ce5e2880ad\")>])\n\nvizsgaremek_tests/test_1041_upload.py:111: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7835c45888ae3e16",
      "name" : "log",
      "source" : "7835c45888ae3e16.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "e1ce76cd36745792",
      "name" : "stdout",
      "source" : "e1ce76cd36745792.txt",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "b9f35ffe3ee1490",
      "name" : "stderr",
      "source" : "b9f35ffe3ee1490.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "vizsgaremek_tests"
  }, {
    "name" : "suite",
    "value" : "test_1041_upload"
  }, {
    "name" : "host",
    "value" : "fv-az33-581"
  }, {
    "name" : "thread",
    "value" : "3962-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "vizsgaremek_tests.test_1041_upload"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "fa37e8dd75322e78",
        "reportUrl" : "https://zibinova.github.io/conduit/77//#testresult/fa37e8dd75322e78",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert (11 + 5) == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"7369c107213eb250b9532a1986ff596c\", element=\"f545310c-97ac-...belement.WebElement (session=\"7369c107213eb250b9532a1986ff596c\", element=\"b3ce1a2e-ea99-4dd3-b134-729a1311baa1\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"7369c107213eb250b9532a1986ff596c\", element=\"0c58f373-bffc-...te.webelement.WebElement (session=\"7369c107213eb250b9532a1986ff596c\", element=\"cf6c302e-aef3-4b1f-afd0-d8df21e4fb8e\")>])",
        "time" : {
          "start" : 1628696758670,
          "stop" : 1628696781396,
          "duration" : 22726
        }
      }, {
        "uid" : "d7b99b14f2951cc",
        "reportUrl" : "https://zibinova.github.io/conduit/5//#testresult/d7b99b14f2951cc",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert (11 + 5) == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"712d02d9f624e7062cf947d4d0f1ab0e\", element=\"db95c0c0-a9f1-...belement.WebElement (session=\"712d02d9f624e7062cf947d4d0f1ab0e\", element=\"6c02d320-5781-48dd-bba1-e7856dca8f9a\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"712d02d9f624e7062cf947d4d0f1ab0e\", element=\"a6566f88-f145-...te.webelement.WebElement (session=\"712d02d9f624e7062cf947d4d0f1ab0e\", element=\"41410ae0-a299-424f-8815-e5f8f9dd8d82\")>])",
        "time" : {
          "start" : 1628690014917,
          "stop" : 1628690037675,
          "duration" : 22758
        }
      }, {
        "uid" : "d2046c6a3bcc7e1c",
        "reportUrl" : "https://zibinova.github.io/conduit/76//#testresult/d2046c6a3bcc7e1c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert (11 + 5) == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"f2427f84bc9cbe3aa0e4082c9473bd50\", element=\"f5591571-2aa2-...belement.WebElement (session=\"f2427f84bc9cbe3aa0e4082c9473bd50\", element=\"12468942-c442-4c8b-8a17-a560e93a2205\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"f2427f84bc9cbe3aa0e4082c9473bd50\", element=\"ece09989-98e1-...te.webelement.WebElement (session=\"f2427f84bc9cbe3aa0e4082c9473bd50\", element=\"82644ea5-2408-48fd-8ffd-61c6463c88f9\")>])",
        "time" : {
          "start" : 1628690006335,
          "stop" : 1628690029036,
          "duration" : 22701
        }
      }, {
        "uid" : "9d784976c08d8e3a",
        "reportUrl" : "https://zibinova.github.io/conduit/4//#testresult/9d784976c08d8e3a",
        "status" : "broken",
        "statusDetails" : "ModuleNotFoundError: No module named 'webdriver_manager'",
        "time" : {
          "start" : 1628688011690,
          "stop" : 1628688011690,
          "duration" : 0
        }
      }, {
        "uid" : "4c40250d74da9b39",
        "reportUrl" : "https://zibinova.github.io/conduit/75//#testresult/4c40250d74da9b39",
        "status" : "broken",
        "statusDetails" : "ModuleNotFoundError: No module named 'webdriver_manager'",
        "time" : {
          "start" : 1628687995449,
          "stop" : 1628687995449,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fd7d3e3d0f17c835.json",
  "parameterValues" : [ ]
}