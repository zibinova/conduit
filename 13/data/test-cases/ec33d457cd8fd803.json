{
  "uid" : "ec33d457cd8fd803",
  "name" : "test_1041_upload",
  "fullName" : "vizsgaremek_tests.test_1041_upload#test_1041_upload",
  "historyId" : "2b107ec223bf494035e5ba2851aa1297",
  "time" : {
    "start" : 1628971379308,
    "stop" : 1628971419890,
    "duration" : 40582
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert (11 + 5) == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"439dd018-90f8-...belement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"7d53c105-52b4-45ea-b770-4b5723075a51\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"aebb41a0-a2a6-...te.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"c9f8537f-0107-42a3-85c4-05f2c880f03a\")>])",
  "statusTrace" : "def test_1041_upload():\n    \n        options = Options()\n        options.headless = True\n    \n        # driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)  # headless mode\n    \n        # options.add_argument('--headless')\n        # options.add_argument('--disable-gpu')\n        URL = \"http://localhost:1667\"\n        driver.get(URL)\n    \n        # cookie handling\n        cookie_accept_button = driver.find_element_by_xpath(\"//div[@class='cookie__bar__buttons']/button[2]\")\n        cookie_accept_button.click()\n    \n        # login to app\n    \n        def login():\n            driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\").click()\n            driver.find_element_by_xpath(\"//form/fieldset[1]/input\").send_keys(\"testella@gmail.com\")\n            driver.find_element_by_xpath(\"//form/fieldset[2]/input\").send_keys(\"Teszt123\")\n            driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n            time.sleep(5)\n    \n        login()\n    \n        # check current number of \"My articles\"\n    \n        user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n        user.click()\n        article_list = driver.find_elements_by_class_name(\"article-preview\")\n    \n        def generate_article():\n            new_article_link = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\")\n            new_article_link.click()\n            time.sleep(2)\n            article_title = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[1]/input\")\n            article_about = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[2]/input\")\n            article_text = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[3]/textarea\")\n            article_tag = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[4]//input\")\n            publish_button = driver.find_element_by_xpath(\"//*[@id='app']//form/button\")\n    \n            article_title.send_keys(row[0])\n            article_about.send_keys(row[1])\n            article_text.send_keys(row[2])\n            article_tag.send_keys(row[3])\n            time.sleep(2)\n            publish_button.click()\n            time.sleep(2)\n    \n        with open(\"new_article.csv\") as csv_file:\n            reader = csv.reader(csv_file, delimiter=',')\n            next(reader)\n            for row in reader:\n                generate_article()\n    \n                title = driver.find_element_by_tag_name(\"h1\").text\n                user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n                author = driver.find_element_by_class_name(\"author\")\n                edit_article_btn = driver.find_element_by_xpath(\"//span/a\")\n                del_article_btn = driver.find_element_by_xpath(\"//span/button\")\n                text = driver.find_element_by_xpath(\"//p\").text\n    \n                assert title == row[0]\n                assert driver.current_url == \"http://localhost:1667/#/articles/\" + title.lower()\n                assert author.is_displayed()\n                assert author.text == user.text\n                assert edit_article_btn.is_displayed() and edit_article_btn.is_enabled()\n                assert del_article_btn.is_displayed() and del_article_btn.is_enabled()\n                assert text == row[2]\n    \n                # date of creation validity\n    \n                today = date.today()\n                article_date = driver.find_element_by_xpath(\"//span[@class='date']\").text\n                article_date_converted = datetime.strptime(article_date, \"%B %d, %Y\")\n                date_to_set = datetime.date(article_date_converted)\n    \n                assert date_to_set == today\n    \n        # validate if newly created blogs have been added to My articles feed:\n        # considering that pagination is not working correctly, all articles would appear on page 1\n    \n        user.click()\n        time.sleep(1)\n        assert driver.current_url == \"http://localhost:1667/#/@\" + user.text + \"/\"\n    \n        # determine number of rows in csv\n    \n        file = open(\"new_article.csv\")\n        reader = csv.reader(file)\n        next(reader)\n        rows = len(list(reader))\n    \n        # checking the current article numbers:\n        new_article_list = driver.find_elements_by_class_name(\"article-preview\")\n    \n>       assert len(article_list) + rows == len(new_article_list)\nE       assert (11 + 5) == 5\nE        +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"439dd018-90f8-...belement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"7d53c105-52b4-45ea-b770-4b5723075a51\")>, ...])\nE        +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"aebb41a0-a2a6-...te.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"c9f8537f-0107-42a3-85c4-05f2c880f03a\")>])\n\nvizsgaremek_tests/test_1041_upload.py:111: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert (11 + 5) == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"439dd018-90f8-...belement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"7d53c105-52b4-45ea-b770-4b5723075a51\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"aebb41a0-a2a6-...te.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"c9f8537f-0107-42a3-85c4-05f2c880f03a\")>])",
    "statusTrace" : "def test_1041_upload():\n    \n        options = Options()\n        options.headless = True\n    \n        # driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)  # headless mode\n    \n        # options.add_argument('--headless')\n        # options.add_argument('--disable-gpu')\n        URL = \"http://localhost:1667\"\n        driver.get(URL)\n    \n        # cookie handling\n        cookie_accept_button = driver.find_element_by_xpath(\"//div[@class='cookie__bar__buttons']/button[2]\")\n        cookie_accept_button.click()\n    \n        # login to app\n    \n        def login():\n            driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\").click()\n            driver.find_element_by_xpath(\"//form/fieldset[1]/input\").send_keys(\"testella@gmail.com\")\n            driver.find_element_by_xpath(\"//form/fieldset[2]/input\").send_keys(\"Teszt123\")\n            driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n            time.sleep(5)\n    \n        login()\n    \n        # check current number of \"My articles\"\n    \n        user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n        user.click()\n        article_list = driver.find_elements_by_class_name(\"article-preview\")\n    \n        def generate_article():\n            new_article_link = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[2]/a\")\n            new_article_link.click()\n            time.sleep(2)\n            article_title = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[1]/input\")\n            article_about = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[2]/input\")\n            article_text = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[3]/textarea\")\n            article_tag = driver.find_element_by_xpath(\"//*[@id='app']//fieldset[4]//input\")\n            publish_button = driver.find_element_by_xpath(\"//*[@id='app']//form/button\")\n    \n            article_title.send_keys(row[0])\n            article_about.send_keys(row[1])\n            article_text.send_keys(row[2])\n            article_tag.send_keys(row[3])\n            time.sleep(2)\n            publish_button.click()\n            time.sleep(2)\n    \n        with open(\"new_article.csv\") as csv_file:\n            reader = csv.reader(csv_file, delimiter=',')\n            next(reader)\n            for row in reader:\n                generate_article()\n    \n                title = driver.find_element_by_tag_name(\"h1\").text\n                user = driver.find_element_by_xpath(\"//*[@id='app']/nav/div/ul/li[4]/a\")\n                author = driver.find_element_by_class_name(\"author\")\n                edit_article_btn = driver.find_element_by_xpath(\"//span/a\")\n                del_article_btn = driver.find_element_by_xpath(\"//span/button\")\n                text = driver.find_element_by_xpath(\"//p\").text\n    \n                assert title == row[0]\n                assert driver.current_url == \"http://localhost:1667/#/articles/\" + title.lower()\n                assert author.is_displayed()\n                assert author.text == user.text\n                assert edit_article_btn.is_displayed() and edit_article_btn.is_enabled()\n                assert del_article_btn.is_displayed() and del_article_btn.is_enabled()\n                assert text == row[2]\n    \n                # date of creation validity\n    \n                today = date.today()\n                article_date = driver.find_element_by_xpath(\"//span[@class='date']\").text\n                article_date_converted = datetime.strptime(article_date, \"%B %d, %Y\")\n                date_to_set = datetime.date(article_date_converted)\n    \n                assert date_to_set == today\n    \n        # validate if newly created blogs have been added to My articles feed:\n        # considering that pagination is not working correctly, all articles would appear on page 1\n    \n        user.click()\n        time.sleep(1)\n        assert driver.current_url == \"http://localhost:1667/#/@\" + user.text + \"/\"\n    \n        # determine number of rows in csv\n    \n        file = open(\"new_article.csv\")\n        reader = csv.reader(file)\n        next(reader)\n        rows = len(list(reader))\n    \n        # checking the current article numbers:\n        new_article_list = driver.find_elements_by_class_name(\"article-preview\")\n    \n>       assert len(article_list) + rows == len(new_article_list)\nE       assert (11 + 5) == 5\nE        +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"439dd018-90f8-...belement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"7d53c105-52b4-45ea-b770-4b5723075a51\")>, ...])\nE        +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"aebb41a0-a2a6-...te.webelement.WebElement (session=\"2e0ee87d9200dfb3bd6935af6fac6bf5\", element=\"c9f8537f-0107-42a3-85c4-05f2c880f03a\")>])\n\nvizsgaremek_tests/test_1041_upload.py:111: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9e0d281abb3da8e6",
      "name" : "log",
      "source" : "9e0d281abb3da8e6.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "fb6849bb79cfdc65",
      "name" : "stderr",
      "source" : "fb6849bb79cfdc65.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "vizsgaremek_tests"
  }, {
    "name" : "suite",
    "value" : "test_1041_upload"
  }, {
    "name" : "host",
    "value" : "fv-az33-581"
  }, {
    "name" : "thread",
    "value" : "3733-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "vizsgaremek_tests.test_1041_upload"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ec33d457cd8fd803.json",
  "parameterValues" : [ ]
}